# Эта конфигурация используется для настройки веб-сервера,
# который обслуживает статические файлы и обрабатывает разные URL-адреса
server {
# Сервер прослушивает порт 80 (порт по умолчанию для HTTP-трафика)
    listen 80;
# Этот блок определяет конфигурацию для URL-адресов, начинающихся с /api/docs/
    location /api/docs/ {
# Устанавливает обслуживание файлов из корневого каталога
        root /usr/share/nginx/html;
# Эта директива пытается напрямую обслуживать запрошенный URI.
# Если это не удастся, он попытается обслужить файл /redoc.html
        try_files $uri $uri/redoc.html;
    }
# Этот блок определяет конфигурацию для местоположения по умолчанию (все остальные URL-адреса)
    location / {
# Устанавливает корневой каталог для обслуживания файлов по умолчанию
        root /usr/share/nginx/html;
# Указывает имена файлов по умолчанию для поиска при запросе каталога
        index  index.html index.htm;
# Пытается обслуживать запрошенный URI напрямую и
# возвращается к обслуживанию файла /index.html, если он не найден
        try_files $uri /index.html;
# Устанавливают различные заголовки для запросов проксирования.
# Они используются для передачи информации внутренним службам, если таковые имеются
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
      }
# Настраивает обработку ошибок для конкретных кодов ошибок HTTP.
      error_page   500 502 503 504  /50x.html;
# Указывает местоположение для обслуживания страницы 50x.html в случае определенных ошибок.
      location = /50x.html {
# Устанавливает корневой каталог для обслуживания страницы ошибки
        root   /var/html/frontend/;
      }
}
